name: DataCooperative
on:
  workflow_dispatch:
  schedule:
    - cron: '0 11 1,15 * *' # every 1st and 15th of the month at 4 AM (11 AM UTC)
env:
  OUTDIR: 'dcoop'
  SITE: 'https://data.library.arizona.edu'
  NOTIFY: '@zoidy @jcoliver @heatherfro @dajama8' #enter GitHub IDs in the form @username. Separate multiple entries by commas or spaces

jobs:
  runlinkcheck:
    name: Linkcheck
    runs-on: ubuntu-latest
    permissions:
      contents: write # for committing
      issues: write   # for creating issues
    outputs:
      out_sha: ${{ steps.commit-action.outputs.commit_hash }}
      out_sha_short: ${{ steps.get_short_sha.outputs.shortsha }}
      out_path: ${{ env.OUTDIR }}/${{ env.OUTFILE }}
      
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: install linkchecker
        run: pip install -r requirements.txt
      - name: set output filename
        run:
          echo "OUTFILE=$(date "+%Y.%m.%d-%H.%M.%S").html" >> "$GITHUB_ENV"
      - name: run check
        continue-on-error: true
        run:
          linkchecker -f linkcheckerrc-${{ env.OUTDIR }} -F html/reports/${{ env.OUTDIR }}/${{ env.OUTFILE }} ${{ env.SITE }}
      - name: commit output report
        id: commit-action
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          commit_message: üìù Create report for ${{ github.workflow }} [skip ci]
      - name: short sha
        id: get_short_sha
        run:
          echo "shortsha=$(cut -b 1-7 - <<< ${{ steps.commit-action.outputs.commit_hash }})" >> "$GITHUB_OUTPUT"


  pages-directory-listing:
    runs-on: ubuntu-latest
    permissions:
      issues: write # for editing issues
    name: Create Directory Listings Index
    needs: runlinkcheck
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.runlinkcheck.outputs.out_sha }}
      - name: Generate Directory Listings
        uses: jayanta525/github-pages-directory-listing@20409ce0808d816bcbc3090ed7a6a784cf6ed9df
        with:
          FOLDER: 'reports'      #directory to generate index
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'reports'      # upload generated folder       
  
  
  deploy: #ensure GH pages has been enabled w/GitHub Actions as a source on the repo or this will fail
    needs: [runlinkcheck, pages-directory-listing]
    name: Deploy Listings Index Page
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
      issues: write     # for updating the issue
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2


  on-success:
    # Update the assignees in a separate job to avoid a notification when the issue is closed.
    # The only notification will be when the issue is assigned
    name: Create issue on success
    runs-on: ubuntu-latest
    needs: [runlinkcheck, pages-directory-listing, deploy]
    permissions:
      issues: write
    outputs:
      issue: ${{ steps.create-issue.outputs.number }}
      
    steps:
      - name: checkout
        uses: actions/checkout@v4 
      - name: create-issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          runid: ${{ github.run_id }}
          workflow: ${{ github.workflow }}
          result: Deploy page successful
          site: ${{ env.SITE }}
          result_link: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          short_sha:  ${{ needs.runlinkcheck.outputs.out_sha_short }}
          commit_link: ${{ github.server_url }}/${{ github.repository }}/commit/${{ needs.runlinkcheck.outputs.out_sha }}
          report_link: ${{ needs.deploy.outputs.page_url }}/${{ needs.runlinkcheck.outputs.out_path }}
          assignees: ${{ env.NOTIFY }}
        with:
          filename: .github/workflows/report_issue_template.md        
          
          
  on-error:
    name: Update issue on error
    runs-on: ubuntu-latest
    needs: [runlinkcheck, pages-directory-listing, deploy]
    if: ${{ always() && contains(needs.*.result, 'failure') }} # https://stackoverflow.com/a/74562058
    permissions:
      issues: write
    outputs:
      issue: ${{ steps.create-issue.outputs.number }}
      
    steps:
      - name: checkout
        uses: actions/checkout@v4 
      - name: create-issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          runid: ${{ github.run_id }}
          workflow: ${{ github.workflow }}
          result: Error generating report. See the Action status for details.
          site: ${{ env.SITE }}
          result_link: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          short_sha:  ${{ needs.runlinkcheck.outputs.out_sha_short }}
          commit_link: ${{ github.server_url }}/${{ github.repository }}/commit/${{ needs.runlinkcheck.outputs.out_sha }}
          report_link: ${{ needs.deploy.outputs.page_url }}/${{ needs.runlinkcheck.outputs.out_path }}
          assignees: ${{ env.NOTIFY }}
        with:
          filename: .github/workflows/report_issue_template.md    


  close-issue:
    name: Close issue on run complete
    runs-on: ubuntu-latest
    needs: [runlinkcheck, pages-directory-listing, deploy, on-success, on-error]
    if: ${{ always()}}
    permissions:
      issues: write
      
    steps:
      - name: Update issue
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'update-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ format('{0}{1}', needs.on-success.outputs.issue, needs.on-error.outputs.issue) }}
          state: 'closed'          
          body: '${{ env.NOTIFY }}'
          update-mode: 'append'
